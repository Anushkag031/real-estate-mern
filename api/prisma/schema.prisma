// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId //create a unique id for each user, default is auto, default is auto increment
  username  String
  email     String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  posts Post[]
  savedPost SavedPost[] //one user can save many posts
}
model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId //create a unique id for each user, default is auto, default is auto increment
  title     String   
  price     Int
  images    String[]
  address    String
  city    String
  bedroom    Int
  bathroom   Int
  latitude    String
  longitude   String
 // img    String
 type Type
 property Property
  createdAt DateTime @default(now())
  user User @relation(fields: [userId],references: [id])
  userId String @db.ObjectId
  postDetail PostDetail?
  savedPost SavedPost[] //one post can be saved by many users
}
enum Type{
  buy
  rent
}
enum Property{
  apartment
  house
  condo
  land
}

model PostDetail {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId //create a unique id for each user, default is auto, default is auto increment
  desc String
utilities String?
pet String?
income String?
size Int?
school Int?
bus Int?
restaurant Int?
postn Post @relation(fields: [postId],references: [id])
postId String @db.ObjectId @unique//create a unique id for each post, default is auto, default



}

model SavedPost{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId],references: [id])
  userId String @db.ObjectId
  post Post @relation(fields: [postId],references: [id])
  postId String @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId,postId])

}
